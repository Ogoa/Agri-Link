[versions] #last stable version
accompanistPermissions = "0.35.1-alpha"
agp = "8.4.2" # 8.4.1
firebaseBom = "33.1.1" #33.1.0
kotlin = "1.9.22"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1" #1.1.5
espressoCore = "3.6.1" #3.5.1
lifecycle_version = "2.8.2"  #2.7.0 # 2.8.0 and 2.8.1 had issues (java.lang.IllegalStateException: CompositionLocal LocalLifecycleOwner not present )
activityCompose = "1.9.0"
composeBom = "2024.06.00" #2024.05.00
coilCompose = "2.4.0"
compose = "1.6.8" #1.6.7
googleServices = "4.4.2"
mapsCompose = "4.4.1"
places = "3.5.0"
playServicesAuth = "21.2.0"
navigationCompose = "2.7.7"
firebaseFirestore = "25.0.0"
playServicesMaps = "19.0.0" #18.2.0
secretsGradlePlugin = "2.0.1"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle_version" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle_version" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle_version" }
google-services = { group = "com.google.gms", name = "google-services", version.ref = "googleServices" }

play-services-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "playServicesAuth" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# Secrets
secrets-gradle-plugin = { module = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin", version.ref = "secretsGradlePlugin" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth" }
firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", version.ref = "firebaseFirestore" }
firebase-storage = { module = "com.google.firebase:firebase-storage" }

# Places
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
places = { module = "com.google.android.libraries.places:places", version.ref = "places" }

# Google Maps
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" } #might be irrelevant



[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

